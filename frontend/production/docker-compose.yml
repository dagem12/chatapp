version: '3.8'

services:
  # Frontend service with conditional Nginx handling
  frontend:
    build:
      context: ..
      dockerfile: production/Dockerfile
    container_name: chat-app-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3000}
      - VITE_SOCKET_URL=${VITE_SOCKET_URL:-http://localhost:3000}
      - VITE_APP_NAME=${VITE_APP_NAME:-Chat App}
      - VITE_APP_VERSION=${VITE_APP_VERSION:-1.0.0}
      - BACKEND_HOST=${BACKEND_HOST:-host.docker.internal}
      - BACKEND_PORT=${BACKEND_PORT:-3002}
    volumes:
      # Mount nginx config (optional - can be built into image)
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - chat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Always start container's nginx
    command: >
      sh -c "
        echo 'Starting built-in Nginx server...';
        echo 'Running in standalone mode with container Nginx';
        nginx -g 'daemon off;';
      "

  # Optional: Nginx proxy service (only if host doesn't have nginx)
  nginx-proxy:
    image: nginx:alpine
    container_name: chat-app-nginx-proxy
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL certificates (optional)
    networks:
      - chat-network
    depends_on:
      - frontend
    restart: unless-stopped
    profiles:
      - proxy  # Only start when explicitly requested
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  chat-network:
    external: true

# No persistent volumes needed for frontend
